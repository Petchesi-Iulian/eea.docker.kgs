[buildout]
extends = buildout.cfg

sources = sources
auto-checkout = *
always-checkout = force
allow-picked-versions = true
show-picked-versions = true

parts +=
  zopepy
  test
  zopeskel
  mkrelease
  monkey
  i18ndude
  nosetest
  xmltestreport
  coverage
  report
  zptlint
  zptlint-test
  pyflakes
  pyflakes-test
  pylint
  pylint-test
  jslint
  jslint-test
  jslint-disable

[configuration]

eggs +=
  rpdb
  ipdb
  plone.reload
  collective.monkeypatcherpanel
  teamrubber.theoracle
  Products.PrintingMailHost
  plone.app.debugtoolbar
  collective.loremipsum
  eea.devel
  eea.package
  Products.ZMIntrospection

zcml +=
  plone.reload
  teamrubber.theoracle
  eea.devel

[zopepy]
recipe = zc.recipe.egg
eggs = ${configuration:eggs}
interpreter = zopepy
scripts = zopepy

[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-progress']
eggs =
  plone.app.testing
  ${configuration:eggs}

[zopeskel]
unzip = true
recipe = zc.recipe.egg
eggs =
  Paste
  PasteDeploy
  PasteScript
  ZopeSkel
  eea.package
  ${configuration:eggs}

[mkrelease]
recipe = zc.recipe.egg
eggs = jarn.mkrelease

[monkey]
recipe = zc.recipe.egg
eggs = eea.eggmonkey
       zest.pocompile

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude
unzip = true

[nosetest]
recipe = pbp.recipe.noserunner
eggs = pbp.recipe.noserunner
working-directory = ${buildout:directory}

[xmltestreport]
recipe = collective.xmltestreport
eggs =
  plone.app.testing
  ${configuration:eggs}
defaults = ['--exit-with-status', '--xml']

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report

[zptlint]
recipe = zc.recipe.egg
eggs =
  ${configuration:eggs}
  zptlint
entry-points = zptlint=zptlint:run

[zptlint-test]
recipe = collective.recipe.template
input = inline:
  #!/bin/sh
  if [ -e zptlint.log ]; then
    echo "Old zptlint.log file removed"
    rm zptlint.log
  fi
  echo "Running zptlint-test"
  ZLINT=`echo $0 | sed 's/zptlint-test/zptlint/g'`
  find $1 -regex ".*\.[c|z]?pt" | xargs -r $ZLINT | perl -p -e 's/\s+$/ /g;s/\s+/ /g;s/\*{3}s?/\n/g' >> zptlint.log
output = ${buildout:directory}/bin/zptlint-test
mode = 755

[pyflakes]
recipe = zc.recipe.egg
eggs = pyflakes
entry-points = pyflakes=pyflakes.scripts.pyflakes:main

[pyflakes-test]
recipe = collective.recipe.template
input = inline:
  #!/bin/sh
  if [ -s pyflakes.log ]; then
    rm pyflakes.log
    echo "Old pyflakes.log file removed"
  fi
  echo "Running pyflakes"
  ZFLAKES=`echo $0 | sed 's/pyflakes-test/pyflakes/g'`
  find -L $1 -name [eE]xtensions -prune -o -name skins -prune -o -name "*.py" -print | xargs -r $ZFLAKES >> pyflakes.log
  exit 0
output = ${buildout:directory}/bin/pyflakes-test
mode = 755

[pylint]
recipe = zc.recipe.egg
eggs =
  pylint
  logilab-astng
  logilab-common
entry-points = pylint=pylint.lint:Run

[pylint-test]
recipe = collective.recipe.template
input = inline:
  #!/bin/sh
  if [ -s pylint.log ]; then
    rm pylint.log
    echo "Old pylint.log file removed"
  fi
  echo "Running pylint"
  # Pylint checker
  PYLINT=`echo $0 | sed 's/pylint-test/pylint/g'`
  RCFILE=`echo $0 | sed 's/bin\/pylint-test/etc\/pylint\/rcfile\.cfg/g'`
  # Find all .py files except zope2 python scripts and interfaces.py
  find -L $1 -name [eE]xtensions -prune -o -name skins -prune -o -name interfaces.py -prune -o -name "*.py" -print | xargs $PYLINT --rcfile=$RCFILE >> pylint.log
  # Check interfaces.py
  PYIFACES=`find -L $1 -name "interfaces.py" -print`
  if [ "$PYIFACES" != "" ]
  then
    $PYLINT --rcfile=$RCFILE --disable=E0211,E0213 $PYIFACES >> pylint.log
  fi
  exit 0
output = ${buildout:directory}/bin/pylint-test
mode = 755

[jslint]
recipe = plone.recipe.command
command = curl -o ${buildout:directory}/bin/jslint.jar https://svn.eionet.europa.eu/repositories/Zope/trunk/www.eea.europa.eu/trunk/tools/jslint/jslint4java-1.4.4.jar
update-command = curl -o ${buildout:directory}/bin/jslint.jar https://svn.eionet.europa.eu/repositories/Zope/trunk/www.eea.europa.eu/trunk/tools/jslint/jslint4java-1.4.4.jar

[jslint-test]
recipe = collective.recipe.template
input = inline:
  #!/bin/sh
  if [ -s jslint.log ]; then
    rm jslint.log
    echo "Old jslint.log file removed"
  fi
  echo "Running jslint"
  JSLINT=`echo $0 | sed 's/jslint-test/jslint.jar/g'`
  JSLINT="java -jar $JSLINT --report xml"
  #JSFILES=`find $1 -regex ".*\.js"`
  JSFILES=`find $1 -regex ".*\.js" ! -path "*/documentation/*" -not -exec grep -H -E -o -c "jslint:disable" {} \; | grep ":0$" | sed s/:0//g`
  if [ "$JSFILES" != "" ]
  then
    $JSLINT $JSFILES >> jslint.log
  else
    echo "<jslint></jslint>" > jslint.log
  fi
  exit 0
output = ${buildout:directory}/bin/jslint-test
mode = 755

[jslint-disable]
recipe = collective.recipe.template
input = inline:
  #!/bin/sh
  JSFILES=`find $1 -regex ".*\.js" -not -exec grep -H -E -o -c "jslint:disable" {} \; | grep ":0$" | sed s/:0//g`
  for JSFILE in $JSFILES
  do
      echo $JSFILE
      sed -i '1i /* jslint:disable */' $JSFILE
  done
output = ${buildout:directory}/bin/jslint-disable
mode = 755

[versions]
rpdb = 0.1.6
ipdb = 0.8.1
